name: Develop v4
on:
  push:
    branches:
      - develop-v4
jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php: [ '7.3', '7.4' ]
        wp: [ '5.3', 'latest', 'trunk' ]
    name: WordPress ${{ matrix.wp }} in PHP ${{ matrix.php }} UnitTest
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 'develop-v4'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          ini-values: post_max_size=256M, short_open_tag=On
          coverage: xdebug

      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: 5.7
          mysql root password: root
          mysql database: root

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: MySQL Version
        run: mysql --version

      - name: Install WordPress
        run: bash bin/install-wp-tests.sh wordpress root root 127.0.0.1 ${{ matrix.wp }}

      - name: Run test suite
        run: composer test

#      - name: Notify Unit Test
#        uses: 8398a7/action-slack@v3.8.0
#        with:
#          status: ${{ job.status }}
#          author_name: "Failure : WordPress ${{ matrix.wp }} in PHP ${{ matrix.php }} UnitTest"
#          fields: repo,message,commit,job
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: failure()

  lint:
    runs-on:  ubuntu-latest
    name: PHP lint
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 'develop-v4'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
          extensions: mbstring, intl
          ini-values: post_max_size=256M, short_open_tag=On
          coverage: xdebug

      - name: Check PHP Version
        run: php -v

      - name: Composer install
        run: composer install --optimize-autoloader --prefer-dist

      - name: phpcs tests
        run: composer phpcs

#      - name: Notify PHP Lint
#        uses: 8398a7/action-slack@v3.8.0
#        with:
#          status: ${{ job.status }}
#          author_name: Failure phpcs
#          fields: repo,message,commit,job
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: failure()

  release:
    name: Release Develop Version
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 'develop-v4'
      - name: Use Node.js 12.14
        uses: actions/setup-node@v1
        with:
          node-version: '12.14'
      - name: Build Files
        run: |
          npm install
          npm run build:deploy-files
          npm run rename:beta-json
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          LOCAL_DIR: build
          REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR_DEVELOP_V4 }}
          ARGS: --verbose --exclude=ystandard-info-beta.json

      - name: Notify Deployment Develop Vesion
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: "[yStandard]開発バージョンのアップデート準備OK！"
          fields: repo,message
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success()
